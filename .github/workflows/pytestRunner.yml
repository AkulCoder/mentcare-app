name: Run Python tests

on:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # os: [ubuntu-latest, windows-latest]
        python-version: ["3.9"] # python-version: ["3.9", "3.10"]

    steps:
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "America/New_York"
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -U pytest
          pip install -e .
          pip install webdriver-manager  # Install webdriver-manager to handle the ChromeDriver
      - name: Run Pytest
        run: python -m pytest --ignore=./tests
      - name: Install Chromium and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
      - name: Set up MySQL database with Docker
        run: |
          docker run --name mysql -e MYSQL_ROOT_PASSWORD=root_password -e MYSQL_DATABASE=my_test_db -p 3306:3306 -d mysql:latest
          sleep 30  # Give MySQL some time to start
      # Copy dump.sql to the Docker container and load it
      - name: Load database dump into MySQL
        run: |
          echo "ls"
          ls
          echo "docker ls 1"
          docker exec mysql ls -al /tmp
          docker cp ./dump.sql mysql:/tmp/dump.sql
          echo "docker ls 2"
          docker exec mysql ls -al /tmp
          docker exec -i mysql mysql -u root -proot_password my_test_db < ./dump.sql
      - name: Install frontend dependencies
        run: |
          cd ./frontend
          yarn install  # Ensure all dependencies are installed
      - name: Ensure react-scripts has execution permissions
        run: chmod +x ./frontend/node_modules/.bin/react-scripts
      - name: Run React frontend and Flask backend
        run: |
          cd ./frontend
          yarn start &
          cd ../backend
          flask run &
          sleep(10)
      - name: Run Selenium Tests
        run: |
          cd ../tests
          python test_therapistsurveys.py
      - name: Push changes to main branch
        if: github.ref == 'refs/heads/dev' && success()
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch --all
          git checkout main
          git merge dev -X theirs --allow-unrelated-histories  # Resolve conflicts automatically in favor of dev
          git push https://github.com/${{ github.repository }}.git HEAD:main  # Push to the 'main' branch using GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the automatically created GITHUB_TOKEN for authentication
